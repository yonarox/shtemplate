.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SHTEMPLATE 1"
.TH SHTEMPLATE 1 "2011-08-04" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\& shtemplate \- An Small Shell Template for start/stop simple projects
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& A simple  template for  build shell applications, the purpose is standardize 
\& development, stablishing model of convention over configuration (like rails)
\& meanwhile help transitions of development to production environments.
\&
\& Do you want help us, send us your commits <aquino@hp.com>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 8
\& Proposito
\& \-
\& Crear  una  plantilla para  desarrollar  aplicaciones  que se ejecutaran  en 
\& shell, la necesidad  viene  de  homologar  la  manera en como se desarrollan 
\& este tipo  de  aplicaciones  al  tener diferentes grupos de trabajo; de esta 
\& manera,  el  implementar  una  plantilla  nos  permite  contextualizar  los 
\& diferentes  archivos  necesarios  y  las puestas en produccion deberan de ser 
\& mucho mas sencillas.  
\&
\& Esquema
\& \-
\&    .
\&    a\*^XXa\*^XXa\*^XX backups 
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX *.bkp
\&    a\*^XXa\*^XXa\*^XX bin 
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX myApplication.start \-> 
\&    a\*^XXA\*^\   a\*^XXA\*^\        ${HOME}/ShellTemplate/bin/shelltemplate.start
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX myApplication.stop  \-> 
\&    a\*^XXA\*^\   a\*^XXA\*^\        ${HOME}/ShellTemplate/bin/shelltemplate.stop
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX myApplication.check \-> 
\&    a\*^XXA\*^\    A\*^\        ${HOME}/ShellTemplate/bin/shelltemplate.check
\&    a\*^XXa\*^XXa\*^XX conf 
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX myApplication.conf
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX log4j.properties
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX setEnvironment.rc
\&    a\*^XXa\*^XXa\*^XX libs 
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX *.jar
\&    a\*^XXa\*^XXa\*^XX logs 
\&    a\*^XXA\*^\ A\*^\  a\*^XXa\*^XXa\*^XX *.log
\&    a\*^XXa\*^XXa\*^XX README
\&
\& 1 directory, 12 files
\&
\& Otros:
\& De la configuracion
\& Usar un archivo de configuracion general donde se coloquen los parametros requeridos por la aplicacion. Este archivo puede referenciarse por una liga desde el home del usuario para poder ubicar los contextos de ejecucion.
\&
\& Ejemplo:
\& \- el directorio de ejecucion se encuentra en:
\&      /opt/apps/batch/shtemplate
\&
\& \- en el directorio tenemos un archivo con los parametros de configuracion en:
\&      CompSvcBatchBC.rc
\&      /opt/apps/batch/shtemplate/setEnvironment.rc
\&
\& \- el contenido del archivo, es el siguiente:
\&      AP_PATH=/opt/apps/batch/shtemplate
\&      AP_FKEY=shtemplate.key
\&      etc..
\&
\& \- y referenciarlo de la siguiente manera:
\&      ln \-sf /opt/apps/batch/shtemplate/setEnvironment.rc $HOME/.shtemplaterc
\&
\& \- de tal manera que lo podriamos referenciar en algun otro shell de la sig manera:
\&      ...
\&      echo "Cargando configuracion"
\&      . ${HOME}/.shtemplaterc
\&      ...
\&
\& La idea de hacer este tipo de configuracion, es usar las rutas por defecto del sistema operativo (en este caso el $HOME del usuario) para poder cargar los parametros de las aplicaciones y evitar conflictos por realizar la ejecucion de las mismas al no encontrarse dentro de los directorios de ejecucion. De esta manera se puede ejecutar el shell desde cualquier ubicacion y estaremos seguros de que este se ejecutara acorde a nuestros parametros.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 2
\& shtemplate v0.2
\& 2011, Hewlett\-Packard Company
\&
\& Andres Aquino <aquino(at)hp.com>
.Ve
.SH "BUGS"
.IX Header "BUGS"
.Vb 1
\& We need translators, developers, debbuggers and of course, beers!
.Ve
